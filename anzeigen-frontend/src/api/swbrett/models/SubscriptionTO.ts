/* tslint:disable */
/* eslint-disable */
/**
 * anzeigen_portal API
 * anzeigen_portal API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SwbUserTO } from './SwbUserTO';
import {
    SwbUserTOFromJSON,
    SwbUserTOFromJSONTyped,
    SwbUserTOToJSON,
    SwbUserTOToJSONTyped,
} from './SwbUserTO';
import type { AdCategory } from './AdCategory';
import {
    AdCategoryFromJSON,
    AdCategoryFromJSONTyped,
    AdCategoryToJSON,
    AdCategoryToJSONTyped,
} from './AdCategory';

/**
 * 
 * @export
 * @interface SubscriptionTO
 */
export interface SubscriptionTO {
    /**
     * 
     * @type {string}
     * @memberof SubscriptionTO
     */
    id?: string;
    /**
     * 
     * @type {Date}
     * @memberof SubscriptionTO
     */
    subscriptionDate?: Date;
    /**
     * 
     * @type {SwbUserTO}
     * @memberof SubscriptionTO
     */
    swbUser?: SwbUserTO;
    /**
     * 
     * @type {AdCategory}
     * @memberof SubscriptionTO
     */
    adCategory?: AdCategory;
}

/**
 * Check if a given object implements the SubscriptionTO interface.
 */
export function instanceOfSubscriptionTO(value: object): value is SubscriptionTO {
    return true;
}

export function SubscriptionTOFromJSON(json: any): SubscriptionTO {
    return SubscriptionTOFromJSONTyped(json, false);
}

export function SubscriptionTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubscriptionTO {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'subscriptionDate': json['subscriptionDate'] == null ? undefined : (new Date(json['subscriptionDate'])),
        'swbUser': json['swbUser'] == null ? undefined : SwbUserTOFromJSON(json['swbUser']),
        'adCategory': json['adCategory'] == null ? undefined : AdCategoryFromJSON(json['adCategory']),
    };
}

  export function SubscriptionTOToJSON(json: any): SubscriptionTO {
      return SubscriptionTOToJSONTyped(json, false);
  }

  export function SubscriptionTOToJSONTyped(value?: SubscriptionTO | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'subscriptionDate': value['subscriptionDate'] == null ? undefined : ((value['subscriptionDate']).toISOString().substring(0,10)),
        'swbUser': SwbUserTOToJSON(value['swbUser']),
        'adCategory': AdCategoryToJSON(value['adCategory']),
    };
}

